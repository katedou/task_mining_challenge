version: '3'

vars:
  PYTHON_VENV: .venv
  APP_PORT: 5000

tasks:
  # Creates a python virtual environment
  create-venv:
    desc: "Creates a python virtual environment"
    cmds:
    - python3.11 -m venv {{.PYTHON_VENV}}

  # Installs dependencies in the python virtual environment
  install-dependencies:
    cmds:
    - >-
      source {{.PYTHON_VENV}}/bin/activate; python -m pip install --upgrade pip; pip install -r requirements.txt; pip install -r requirements-dev.txt; #magic___^_^___line #magic___^_^___line #magic___^_^___line #magic___^_^___line #magic___^_^___line #magic___^_^___line #magic___^_^___line
  # update dependencies whenever there is changes in requirements.ini or requirements-dev.ini
  update-python-dependencies:
    cmds:
    - |
      # Unset CONDA_PREFIX to avoid conflicts with the venv
      # for uv
      unset CONDA_PREFIX

      # Make sure to have the venv with the required Python version
      # activated (currently 3.11)
      pip install pip pip-tools uv --upgrade
      uv pip compile requirements.in -o requirements.txt
      uv pip compile requirements-dev.in -o requirements-dev.txt
      uv pip sync requirements.txt requirements-dev.txt

      # once the env is updated, the pre-commit need to be installed again
      uv pip install -U pre-commit && pre-commit install

  run-local:
    cmds:
    - |
      source {{.PYTHON_VENV}}/bin/activate
      uvicorn app.main:app --port {{.APP_PORT}} --timeout-keep-alive 10 --reload

  docker-build:
    cmds:
    - docker build --build-arg WANDB_API_KEY=$WANDB_API_KEY -t gesture-recognition .

  docker-run:
    cmds:
    - docker run -it --cpus=2 --memory=4g -v $(pwd)/training/models:/app/training/models -v $(pwd)/training/data:/app/training/data -p 5000:5000 gesture-recognition:latest

  pytest-run:
    cmds:
    - pytest -v -s --log-cli-level=DEBUG
